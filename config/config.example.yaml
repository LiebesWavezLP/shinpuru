# This just marks the version of the config.
# This is essential for figuring out if the config
# structure has changed with an update and if the config
# will be not validly parsed.
configVersionPleaseDoNotChange: 6

# Discord specific configuration
discord:
  # Your bot's token you will get from https://discordapp.com/developers/applications
  token: "MzI4NTc5NjU2MzIyMjUyODAx.DySqfg.6ZZznoZ6A6ZfeM2PiKSyQup05MI"
  # The global prefix which will be always usable on all guilds
  generalprefix: "sp!"
  # The Discord ID of the host of the bot
  # This user will have FULL PERMISSIONS on all guilds
  ownerid: "221905671296253953"
  # The client ID of the bot's application account
  # Get this from https://discordapp.com/developers/applications
  clientid: "536916384026722314"
  # The client secret for the bot's application account
  # Get this from https://discordapp.com/developers/applications
  clientsecret: "273n9awshbr3w7zb5cq3ucbq234q43q"

# Default permissions for users and admins
permissions:
  # Default permissions for users without any
  # previleges
  defaultuserrules:
  - +sp.etc.*
  - +sp.chat.*
  # Default permissions for guild owners
  # and admins
  defaultadminrules:
  - +sp.guild.*
  - +sp.etc.*
  - +sp.chat.*

# Database sepcific configuration
database:
  # Currently, this bot supports MySql (MariaDB) and SQLite3
  # Just enter here which you want to use.
  # Please, DO NOT USE SQLite in a real production environment
  # and ONLY use it for testing and debugging!
  # Here you can read why: https://github.com/zekroTJA/shinpuru/wiki/No-SQLite-in-production
  type: "mysql"
  # MySQL (MariaDB) configuration
  mysql:
    # Host address of the database
    host: "mysql.example.com"
    # Username of the database account
    user: "shinpuru"
    # Password for the used database account
    password: "5up3rb4dp455w0rd"
    # Database name
    database: "shinpuru"
  # SQLite configuration
  sqlite:
    # SQLite database file location
    dbfile: "./database/shinpuru.sqlite3.db"
  # Redis can be used as ADDITIONAL database layer and
  # is not usable as database alone.
  # If you enable Redis, database calls will be cached
  # in memory to improve response times and reduce the 
  # load on your database.
  redis:
    # Whether to enable redis
    enable: false
    # Redis host address
    addr: "localhost:6379"
    # Redis password
    password: "myredispassword"
    # Database type
    type: 0

# Logging preferences
logging:
  # Print log output each time a command is called
  commandlogging: true
  # Set the log level of the logger
  # Log levels can be found here:
  # https://github.com/op/go-logging/blob/master/level.go#L20
  loglevel: 4

# Storage interface configuration
storage:
  # Here you can chose between 'file' or
  # 'minio' as storage interfaces.
  # Minio also supprts connecting to Amazon S3
  # or google Cloud.
  type: "minio"
  # Minio interface configuration
  minio:
    # Endpoint address of the storage
    endpoint: "minio.exmaple.com"
    # Storage access key
    accesskey: "my_minio_access_key"
    # Storage access secret
    accesssecret: "my_minio_access_secret"
    # Main location to be used
    location: "us-east-1"
    # Use HTTPS for API calls
    secure: true
  # File interface configuration
  file:
    # Local location of the data storage
    location: ./data

# Web server configuration
webserver:
  # Whether to expose web server and REST API
  enabled: true
  # Address to expose web server to
  addr: 0.0.0.0:8080
  # TLS configuration
  tls:
    # Use TLS (HTTPS)
    enabled: false
    # TLS certificate location
    cert: "/etc/cert/mycert.pem"
    # TLS keyfile location
    key: "/etc/cert/mykey.pem"
  # The address, the web server will be accessable
  # This value MUST be the same address as configured
  # in the OAuth2 preferences of your bots application
  publicaddr: "https://shinpuru.example.com"
  # Debug address which is set during debugging as
  # CORS origin domain.
  debugpublicaddr: "http://localhost:8081"

# Miscellaneous  settings
etc:
  # If you want to use the Twitch notification feature of this
  # bot, you need to create a Twitch App for requesting the API:
  # https://glass.twitch.tv/console/apps
  # Create an app and paste the Client ID here (NOT THE SECRET!)
  twitchappid: "tu761eecqd8yv0z0wv9zmi4an9ptgs"
