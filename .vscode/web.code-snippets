{
  // Place your shinpuru workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Create React Route": {
    "scope": "typescriptreact",
    "prefix": "route",
    "description": "Create a React Route",
    "body": [
      "import React, { useEffect } from 'react';",
      "import { useTranslation } from 'react-i18next';",
      "import { useParams } from 'react-router';",
      "import styled from 'styled-components';",
      "import { useApi } from '../../../hooks/useApi';",
      "import { useNotifications } from '../../../hooks/useNotifications';",
      "",
      "type Props = {}",
      "",
      "const $1Route: React.FC<Props> = ({}) => {",
      "  const { t } = useTranslation('routes.$2');",
      "  const { pushNotification } = useNotifications();",
      "  const { guildid } = useParams();",
      "  const fetch = useApi();",
      "",
      "  useEffect(() => {",
      "    if (!guildid) return;",
      "  }, [guildid]);",
      "",
      "  return <></>;",
      "}",
      "",
      "export default $1Route;"
    ]
  }
}
